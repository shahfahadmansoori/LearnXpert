{"version":3,"sources":["../src/utils/getStyleComputedProperty.js","../src/utils/getParentNode.js","../src/utils/getScrollParent.js","../src/utils/isBrowser.js","../src/utils/isIE.js","../src/utils/getOffsetParent.js","../src/utils/isOffsetContainer.js","../src/utils/getRoot.js","../src/utils/findCommonOffsetParent.js","../src/utils/getScroll.js","../src/utils/includeScroll.js","../src/utils/getBordersSize.js","../src/utils/getWindowSizes.js","../src/utils/getClientRect.js","../src/utils/getBoundingClientRect.js","../src/utils/getOffsetRectRelativeToArbitraryNode.js","../src/utils/getViewportOffsetRectRelativeToArtbitraryNode.js","../src/utils/isFixed.js","../src/utils/getFixedPositionOffsetParent.js","../src/utils/getBoundaries.js","../src/utils/computeAutoPlacement.js","../src/utils/debounce.js","../src/utils/find.js","../src/utils/findIndex.js","../src/utils/getOffsetRect.js","../src/utils/getOuterSizes.js","../src/utils/getOppositePlacement.js","../src/utils/getPopperOffsets.js","../src/utils/getReferenceOffsets.js","../src/utils/getSupportedPropertyName.js","../src/utils/isFunction.js","../src/utils/isModifierEnabled.js","../src/utils/isModifierRequired.js","../src/utils/isNumeric.js","../src/utils/getWindow.js","../src/utils/removeEventListeners.js","../src/utils/runModifiers.js","../src/utils/setAttributes.js","../src/utils/setStyles.js","../src/utils/setupEventListeners.js","../src/utils/index.js"],"names":["getStyleComputedProperty","element","property","nodeType","window","ownerDocument","defaultView","css","getComputedStyle","getParentNode","nodeName","parentNode","host","getScrollParent","document","body","overflow","overflowX","overflowY","test","isIE11","isBrowser","MSInputMethodContext","documentMode","isIE10","navigator","userAgent","isIE","version","getOffsetParent","documentElement","noOffsetParent","offsetParent","nextElementSibling","indexOf","isOffsetContainer","firstElementChild","getRoot","node","findCommonOffsetParent","element1","element2","order","compareDocumentPosition","Node","DOCUMENT_POSITION_FOLLOWING","start","end","range","createRange","setStart","setEnd","commonAncestorContainer","contains","element1root","getScroll","side","upperSide","html","scrollingElement","includeScroll","rect","subtract","scrollTop","scrollLeft","modifier","top","bottom","left","right","getBordersSize","styles","axis","sideA","sideB","parseFloat","getSize","computedStyle","Math","max","parseInt","getWindowSizes","getClientRect","offsets","width","height","getBoundingClientRect","e","result","sizes","clientWidth","clientHeight","horizScrollbar","offsetWidth","vertScrollbar","offsetHeight","getOffsetRectRelativeToArbitraryNode","children","parent","fixedPosition","runIsIE","isHTML","childrenRect","parentRect","scrollParent","borderTopWidth","borderLeftWidth","marginTop","marginLeft","getViewportOffsetRectRelativeToArtbitraryNode","excludeScroll","relativeOffset","innerWidth","innerHeight","offset","isFixed","getFixedPositionOffsetParent","parentElement","el","getBoundaries","popper","reference","padding","boundariesElement","boundaries","boundariesNode","isPaddingNumber","getArea","computeAutoPlacement","placement","refRect","rects","sortedAreas","Object","keys","map","key","sort","a","b","area","filteredAreas","filter","computedPlacement","length","variation","split","longerTimeoutBrowsers","timeoutDuration","i","microtaskDebounce","fn","called","Promise","resolve","then","taskDebounce","scheduled","supportsMicroTasks","find","arr","check","Array","prototype","findIndex","prop","value","cur","match","obj","getOffsetRect","elementRect","offsetLeft","offsetTop","getOuterSizes","x","marginBottom","y","marginRight","getOppositePlacement","hash","replace","matched","getPopperOffsets","referenceOffsets","popperRect","popperOffsets","isHoriz","mainSide","secondarySide","measurement","secondaryMeasurement","getReferenceOffsets","state","commonOffsetParent","getSupportedPropertyName","prefixes","upperProp","charAt","toUpperCase","slice","prefix","toCheck","style","isFunction","functionToCheck","getType","toString","call","isModifierEnabled","modifiers","modifierName","some","name","enabled","isModifierRequired","requestingName","requestedName","requesting","isRequired","requested","warn","isNumeric","n","isNaN","isFinite","getWindow","removeEventListeners","removeEventListener","updateBound","scrollParents","forEach","target","scrollElement","eventsEnabled","runModifiers","data","ends","modifiersToRun","undefined","setAttributes","attributes","setAttribute","removeAttribute","setStyles","unit","attachToScrollParents","event","callback","isBody","addEventListener","passive","push","setupEventListeners","options"],"mappings":"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","file":"popper-utils.d3346007.js","sourceRoot":"..\\src","sourcesContent":["/**\n * Get CSS computed property of the given element\n * @method\n * @memberof Popper.Utils\n * @argument {Eement} element\n * @argument {String} property\n */\nexport default function getStyleComputedProperty(element, property) {\n  if (element.nodeType !== 1) {\n    return [];\n  }\n  // NOTE: 1 DOM access here\n  const window = element.ownerDocument.defaultView;\n  const css = window.getComputedStyle(element, null);\n  return property ? css[property] : css;\n}\n","/**\n * Returns the parentNode or the host of the element\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Element} parent\n */\nexport default function getParentNode(element) {\n  if (element.nodeName === 'HTML') {\n    return element;\n  }\n  return element.parentNode || element.host;\n}\n","import getStyleComputedProperty from './getStyleComputedProperty';\nimport getParentNode from './getParentNode';\n\n/**\n * Returns the scrolling parent of the given element\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Element} scroll parent\n */\nexport default function getScrollParent(element) {\n  // Return body, `getScroll` will take care to get the correct `scrollTop` from it\n  if (!element) {\n    return document.body\n  }\n\n  switch (element.nodeName) {\n    case 'HTML':\n    case 'BODY':\n      return element.ownerDocument.body\n    case '#document':\n      return element.body\n  }\n\n  // Firefox want us to check `-x` and `-y` variations as well\n  const { overflow, overflowX, overflowY } = getStyleComputedProperty(element);\n  if (/(auto|scroll|overlay)/.test(overflow + overflowY + overflowX)) {\n    return element;\n  }\n\n  return getScrollParent(getParentNode(element));\n}\n","export default typeof window !== 'undefined' && typeof document !== 'undefined';\n","import isBrowser from './isBrowser';\n\nconst isIE11 = isBrowser && !!(window.MSInputMethodContext && document.documentMode);\nconst isIE10 = isBrowser && /MSIE 10/.test(navigator.userAgent);\n\n/**\n * Determines if the browser is Internet Explorer\n * @method\n * @memberof Popper.Utils\n * @param {Number} version to check\n * @returns {Boolean} isIE\n */\nexport default function isIE(version) {\n  if (version === 11) {\n    return isIE11;\n  }\n  if (version === 10) {\n    return isIE10;\n  }\n  return isIE11 || isIE10;\n}\n","import getStyleComputedProperty from './getStyleComputedProperty';\nimport isIE from './isIE';\n/**\n * Returns the offset parent of the given element\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Element} offset parent\n */\nexport default function getOffsetParent(element) {\n  if (!element) {\n    return document.documentElement;\n  }\n\n  const noOffsetParent = isIE(10) ? document.body : null;\n\n  // NOTE: 1 DOM access here\n  let offsetParent = element.offsetParent || null;\n  // Skip hidden elements which don't have an offsetParent\n  while (offsetParent === noOffsetParent && element.nextElementSibling) {\n    offsetParent = (element = element.nextElementSibling).offsetParent;\n  }\n\n  const nodeName = offsetParent && offsetParent.nodeName;\n\n  if (!nodeName || nodeName === 'BODY' || nodeName === 'HTML') {\n    return element ? element.ownerDocument.documentElement : document.documentElement;\n  }\n\n  // .offsetParent will return the closest TH, TD or TABLE in case\n  // no offsetParent is present, I hate this job...\n  if (\n    ['TH', 'TD', 'TABLE'].indexOf(offsetParent.nodeName) !== -1 &&\n    getStyleComputedProperty(offsetParent, 'position') === 'static'\n  ) {\n    return getOffsetParent(offsetParent);\n  }\n\n  return offsetParent;\n}\n","import getOffsetParent from './getOffsetParent';\n\nexport default function isOffsetContainer(element) {\n  const { nodeName } = element;\n  if (nodeName === 'BODY') {\n    return false;\n  }\n  return (\n    nodeName === 'HTML' || getOffsetParent(element.firstElementChild) === element\n  );\n}\n","/**\n * Finds the root node (document, shadowDOM root) of the given element\n * @method\n * @memberof Popper.Utils\n * @argument {Element} node\n * @returns {Element} root node\n */\nexport default function getRoot(node) {\n  if (node.parentNode !== null) {\n    return getRoot(node.parentNode);\n  }\n\n  return node;\n}\n","import isOffsetContainer from './isOffsetContainer';\nimport getRoot from './getRoot';\nimport getOffsetParent from './getOffsetParent';\n\n/**\n * Finds the offset parent common to the two provided nodes\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element1\n * @argument {Element} element2\n * @returns {Element} common offset parent\n */\nexport default function findCommonOffsetParent(element1, element2) {\n  // This check is needed to avoid errors in case one of the elements isn't defined for any reason\n  if (!element1 || !element1.nodeType || !element2 || !element2.nodeType) {\n    return document.documentElement;\n  }\n\n  // Here we make sure to give as \"start\" the element that comes first in the DOM\n  const order =\n    element1.compareDocumentPosition(element2) &\n    Node.DOCUMENT_POSITION_FOLLOWING;\n  const start = order ? element1 : element2;\n  const end = order ? element2 : element1;\n\n  // Get common ancestor container\n  const range = document.createRange();\n  range.setStart(start, 0);\n  range.setEnd(end, 0);\n  const { commonAncestorContainer } = range;\n\n  // Both nodes are inside #document\n  if (\n    (element1 !== commonAncestorContainer &&\n      element2 !== commonAncestorContainer) ||\n    start.contains(end)\n  ) {\n    if (isOffsetContainer(commonAncestorContainer)) {\n      return commonAncestorContainer;\n    }\n\n    return getOffsetParent(commonAncestorContainer);\n  }\n\n  // one of the nodes is inside shadowDOM, find which one\n  const element1root = getRoot(element1);\n  if (element1root.host) {\n    return findCommonOffsetParent(element1root.host, element2);\n  } else {\n    return findCommonOffsetParent(element1, getRoot(element2).host);\n  }\n}\n","/**\n * Gets the scroll value of the given element in the given side (top and left)\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @argument {String} side `top` or `left`\n * @returns {number} amount of scrolled pixels\n */\nexport default function getScroll(element, side = 'top') {\n  const upperSide = side === 'top' ? 'scrollTop' : 'scrollLeft';\n  const nodeName = element.nodeName;\n\n  if (nodeName === 'BODY' || nodeName === 'HTML') {\n    const html = element.ownerDocument.documentElement;\n    const scrollingElement = element.ownerDocument.scrollingElement || html;\n    return scrollingElement[upperSide];\n  }\n\n  return element[upperSide];\n}\n","import getScroll from './getScroll';\n\n/*\n * Sum or subtract the element scroll values (left and top) from a given rect object\n * @method\n * @memberof Popper.Utils\n * @param {Object} rect - Rect object you want to change\n * @param {HTMLElement} element - The element from the function reads the scroll values\n * @param {Boolean} subtract - set to true if you want to subtract the scroll values\n * @return {Object} rect - The modifier rect object\n */\nexport default function includeScroll(rect, element, subtract = false) {\n  const scrollTop = getScroll(element, 'top');\n  const scrollLeft = getScroll(element, 'left');\n  const modifier = subtract ? -1 : 1;\n  rect.top += scrollTop * modifier;\n  rect.bottom += scrollTop * modifier;\n  rect.left += scrollLeft * modifier;\n  rect.right += scrollLeft * modifier;\n  return rect;\n}\n","/*\n * Helper to detect borders of a given element\n * @method\n * @memberof Popper.Utils\n * @param {CSSStyleDeclaration} styles\n * Result of `getStyleComputedProperty` on the given element\n * @param {String} axis - `x` or `y`\n * @return {number} borders - The borders size of the given axis\n */\n\nexport default function getBordersSize(styles, axis) {\n  const sideA = axis === 'x' ? 'Left' : 'Top';\n  const sideB = sideA === 'Left' ? 'Right' : 'Bottom';\n\n  return (\n    parseFloat(styles[`border${sideA}Width`], 10) +\n    parseFloat(styles[`border${sideB}Width`], 10)\n  );\n}\n","import isIE from './isIE';\n\nfunction getSize(axis, body, html, computedStyle) {\n  return Math.max(\n    body[`offset${axis}`],\n    body[`scroll${axis}`],\n    html[`client${axis}`],\n    html[`offset${axis}`],\n    html[`scroll${axis}`],\n    isIE(10)\n      ? (parseInt(html[`offset${axis}`]) + \n      parseInt(computedStyle[`margin${axis === 'Height' ? 'Top' : 'Left'}`]) + \n      parseInt(computedStyle[`margin${axis === 'Height' ? 'Bottom' : 'Right'}`]))\n    : 0 \n  );\n}\n\nexport default function getWindowSizes(document) {\n  const body = document.body;\n  const html = document.documentElement;\n  const computedStyle = isIE(10) && getComputedStyle(html);\n\n  return {\n    height: getSize('Height', body, html, computedStyle),\n    width: getSize('Width', body, html, computedStyle),\n  };\n}\n","/**\n * Given element offsets, generate an output similar to getBoundingClientRect\n * @method\n * @memberof Popper.Utils\n * @argument {Object} offsets\n * @returns {Object} ClientRect like output\n */\nexport default function getClientRect(offsets) {\n  return {\n    ...offsets,\n    right: offsets.left + offsets.width,\n    bottom: offsets.top + offsets.height,\n  };\n}\n","import getStyleComputedProperty from './getStyleComputedProperty';\nimport getBordersSize from './getBordersSize';\nimport getWindowSizes from './getWindowSizes';\nimport getScroll from './getScroll';\nimport getClientRect from './getClientRect';\nimport isIE from './isIE';\n\n/**\n * Get bounding client rect of given element\n * @method\n * @memberof Popper.Utils\n * @param {HTMLElement} element\n * @return {Object} client rect\n */\nexport default function getBoundingClientRect(element) {\n  let rect = {};\n\n  // IE10 10 FIX: Please, don't ask, the element isn't\n  // considered in DOM in some circumstances...\n  // This isn't reproducible in IE10 compatibility mode of IE11\n  try {\n    if (isIE(10)) {\n      rect = element.getBoundingClientRect();\n      const scrollTop = getScroll(element, 'top');\n      const scrollLeft = getScroll(element, 'left');\n      rect.top += scrollTop;\n      rect.left += scrollLeft;\n      rect.bottom += scrollTop;\n      rect.right += scrollLeft;\n    }\n    else {\n      rect = element.getBoundingClientRect();\n    }\n  }\n  catch(e){}\n\n  const result = {\n    left: rect.left,\n    top: rect.top,\n    width: rect.right - rect.left,\n    height: rect.bottom - rect.top,\n  };\n\n  // subtract scrollbar size from sizes\n  const sizes = element.nodeName === 'HTML' ? getWindowSizes(element.ownerDocument) : {};\n  const width =\n    sizes.width || element.clientWidth || result.right - result.left;\n  const height =\n    sizes.height || element.clientHeight || result.bottom - result.top;\n\n  let horizScrollbar = element.offsetWidth - width;\n  let vertScrollbar = element.offsetHeight - height;\n\n  // if an hypothetical scrollbar is detected, we must be sure it's not a `border`\n  // we make this check conditional for performance reasons\n  if (horizScrollbar || vertScrollbar) {\n    const styles = getStyleComputedProperty(element);\n    horizScrollbar -= getBordersSize(styles, 'x');\n    vertScrollbar -= getBordersSize(styles, 'y');\n\n    result.width -= horizScrollbar;\n    result.height -= vertScrollbar;\n  }\n\n  return getClientRect(result);\n}\n","import getStyleComputedProperty from './getStyleComputedProperty';\nimport includeScroll from './includeScroll';\nimport getScrollParent from './getScrollParent';\nimport getBoundingClientRect from './getBoundingClientRect';\nimport runIsIE from './isIE';\nimport getClientRect from './getClientRect';\n\nexport default function getOffsetRectRelativeToArbitraryNode(children, parent, fixedPosition = false) {\n  const isIE10 = runIsIE(10);\n  const isHTML = parent.nodeName === 'HTML';\n  const childrenRect = getBoundingClientRect(children);\n  const parentRect = getBoundingClientRect(parent);\n  const scrollParent = getScrollParent(children);\n\n  const styles = getStyleComputedProperty(parent);\n  const borderTopWidth = parseFloat(styles.borderTopWidth, 10);\n  const borderLeftWidth = parseFloat(styles.borderLeftWidth, 10);\n\n  // In cases where the parent is fixed, we must ignore negative scroll in offset calc\n  if(fixedPosition && isHTML) {\n    parentRect.top = Math.max(parentRect.top, 0);\n    parentRect.left = Math.max(parentRect.left, 0);\n  }\n  let offsets = getClientRect({\n    top: childrenRect.top - parentRect.top - borderTopWidth,\n    left: childrenRect.left - parentRect.left - borderLeftWidth,\n    width: childrenRect.width,\n    height: childrenRect.height,\n  });\n  offsets.marginTop = 0;\n  offsets.marginLeft = 0;\n\n  // Subtract margins of documentElement in case it's being used as parent\n  // we do this only on HTML because it's the only element that behaves\n  // differently when margins are applied to it. The margins are included in\n  // the box of the documentElement, in the other cases not.\n  if (!isIE10 && isHTML) {\n    const marginTop = parseFloat(styles.marginTop, 10);\n    const marginLeft = parseFloat(styles.marginLeft, 10);\n\n    offsets.top -= borderTopWidth - marginTop;\n    offsets.bottom -= borderTopWidth - marginTop;\n    offsets.left -= borderLeftWidth - marginLeft;\n    offsets.right -= borderLeftWidth - marginLeft;\n\n    // Attach marginTop and marginLeft because in some circumstances we may need them\n    offsets.marginTop = marginTop;\n    offsets.marginLeft = marginLeft;\n  }\n\n  if (\n    isIE10 && !fixedPosition\n      ? parent.contains(scrollParent)\n      : parent === scrollParent && scrollParent.nodeName !== 'BODY'\n  ) {\n    offsets = includeScroll(offsets, parent);\n  }\n\n  return offsets;\n}\n","import getOffsetRectRelativeToArbitraryNode from './getOffsetRectRelativeToArbitraryNode';\nimport getScroll from './getScroll';\nimport getClientRect from './getClientRect';\n\nexport default function getViewportOffsetRectRelativeToArtbitraryNode(element, excludeScroll = false) {\n  const html = element.ownerDocument.documentElement;\n  const relativeOffset = getOffsetRectRelativeToArbitraryNode(element, html);\n  const width = Math.max(html.clientWidth, window.innerWidth || 0);\n  const height = Math.max(html.clientHeight, window.innerHeight || 0);\n\n  const scrollTop = !excludeScroll ? getScroll(html) : 0;\n  const scrollLeft = !excludeScroll ? getScroll(html, 'left') : 0;\n\n  const offset = {\n    top: scrollTop - relativeOffset.top + relativeOffset.marginTop,\n    left: scrollLeft - relativeOffset.left + relativeOffset.marginLeft,\n    width,\n    height,\n  };\n\n  return getClientRect(offset);\n}\n","import getStyleComputedProperty from './getStyleComputedProperty';\nimport getParentNode from './getParentNode';\n\n/**\n * Check if the given element is fixed or is inside a fixed parent\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @argument {Element} customContainer\n * @returns {Boolean} answer to \"isFixed?\"\n */\nexport default function isFixed(element) {\n  const nodeName = element.nodeName;\n  if (nodeName === 'BODY' || nodeName === 'HTML') {\n    return false;\n  }\n  if (getStyleComputedProperty(element, 'position') === 'fixed') {\n    return true;\n  }\n  const parentNode = getParentNode(element);\n  if (!parentNode) {\n    return false;\n  }\n  return isFixed(parentNode);\n}\n","import getStyleComputedProperty from './getStyleComputedProperty';\nimport isIE from './isIE';\n/**\n * Finds the first parent of an element that has a transformed property defined\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Element} first transformed parent or documentElement\n */\n\nexport default function getFixedPositionOffsetParent(element) {\n  // This check is needed to avoid errors in case one of the elements isn't defined for any reason\n   if (!element || !element.parentElement || isIE()) {\n    return document.documentElement;\n  }\n  let el = element.parentElement;\n  while (el && getStyleComputedProperty(el, 'transform') === 'none') {\n    el = el.parentElement;\n  }\n  return el || document.documentElement;\n\n}\n","import getScrollParent from './getScrollParent';\nimport getParentNode from './getParentNode';\nimport findCommonOffsetParent from './findCommonOffsetParent';\nimport getOffsetRectRelativeToArbitraryNode from './getOffsetRectRelativeToArbitraryNode';\nimport getViewportOffsetRectRelativeToArtbitraryNode from './getViewportOffsetRectRelativeToArtbitraryNode';\nimport getWindowSizes from './getWindowSizes';\nimport isFixed from './isFixed';\nimport getFixedPositionOffsetParent from './getFixedPositionOffsetParent';\n\n/**\n * Computed the boundaries limits and return them\n * @method\n * @memberof Popper.Utils\n * @param {HTMLElement} popper\n * @param {HTMLElement} reference\n * @param {number} padding\n * @param {HTMLElement} boundariesElement - Element used to define the boundaries\n * @param {Boolean} fixedPosition - Is in fixed position mode\n * @returns {Object} Coordinates of the boundaries\n */\nexport default function getBoundaries(\n  popper,\n  reference,\n  padding,\n  boundariesElement,\n  fixedPosition = false\n) {\n  // NOTE: 1 DOM access here\n\n  let boundaries = { top: 0, left: 0 };\n  const offsetParent = fixedPosition ? getFixedPositionOffsetParent(popper) : findCommonOffsetParent(popper, reference);\n\n  // Handle viewport case\n  if (boundariesElement === 'viewport' ) {\n    boundaries = getViewportOffsetRectRelativeToArtbitraryNode(offsetParent, fixedPosition);\n  }\n\n  else {\n    // Handle other cases based on DOM element used as boundaries\n    let boundariesNode;\n    if (boundariesElement === 'scrollParent') {\n      boundariesNode = getScrollParent(getParentNode(reference));\n      if (boundariesNode.nodeName === 'BODY') {\n        boundariesNode = popper.ownerDocument.documentElement;\n      }\n    } else if (boundariesElement === 'window') {\n      boundariesNode = popper.ownerDocument.documentElement;\n    } else {\n      boundariesNode = boundariesElement;\n    }\n\n    const offsets = getOffsetRectRelativeToArbitraryNode(\n      boundariesNode,\n      offsetParent,\n      fixedPosition\n    );\n\n    // In case of HTML, we need a different computation\n    if (boundariesNode.nodeName === 'HTML' && !isFixed(offsetParent)) {\n      const { height, width } = getWindowSizes(popper.ownerDocument);\n      boundaries.top += offsets.top - offsets.marginTop;\n      boundaries.bottom = height + offsets.top;\n      boundaries.left += offsets.left - offsets.marginLeft;\n      boundaries.right = width + offsets.left;\n    } else {\n      // for all the other DOM elements, this one is good\n      boundaries = offsets;\n    }\n  }\n\n  // Add paddings\n  padding = padding || 0;\n  const isPaddingNumber = typeof padding === 'number';\n  boundaries.left += isPaddingNumber ? padding : padding.left || 0; \n  boundaries.top += isPaddingNumber ? padding : padding.top || 0; \n  boundaries.right -= isPaddingNumber ? padding : padding.right || 0; \n  boundaries.bottom -= isPaddingNumber ? padding : padding.bottom || 0; \n\n  return boundaries;\n}\n","import getBoundaries from '../utils/getBoundaries';\n\nfunction getArea({ width, height }) {\n  return width * height;\n}\n\n/**\n * Utility used to transform the `auto` placement to the placement with more\n * available space.\n * @method\n * @memberof Popper.Utils\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nexport default function computeAutoPlacement(\n  placement,\n  refRect,\n  popper,\n  reference,\n  boundariesElement,\n  padding = 0\n) {\n  if (placement.indexOf('auto') === -1) {\n    return placement;\n  }\n\n  const boundaries = getBoundaries(\n    popper,\n    reference,\n    padding,\n    boundariesElement\n  );\n\n  const rects = {\n    top: {\n      width: boundaries.width,\n      height: refRect.top - boundaries.top,\n    },\n    right: {\n      width: boundaries.right - refRect.right,\n      height: boundaries.height,\n    },\n    bottom: {\n      width: boundaries.width,\n      height: boundaries.bottom - refRect.bottom,\n    },\n    left: {\n      width: refRect.left - boundaries.left,\n      height: boundaries.height,\n    },\n  };\n\n  const sortedAreas = Object.keys(rects)\n    .map(key => ({\n      key,\n      ...rects[key],\n      area: getArea(rects[key]),\n    }))\n    .sort((a, b) => b.area - a.area);\n\n  const filteredAreas = sortedAreas.filter(\n    ({ width, height }) =>\n      width >= popper.clientWidth && height >= popper.clientHeight\n  );\n\n  const computedPlacement = filteredAreas.length > 0\n    ? filteredAreas[0].key\n    : sortedAreas[0].key;\n\n  const variation = placement.split('-')[1];\n\n  return computedPlacement + (variation ? `-${variation}` : '');\n}\n","import isBrowser from './isBrowser';\n\nconst longerTimeoutBrowsers = ['Edge', 'Trident', 'Firefox'];\nlet timeoutDuration = 0;\nfor (let i = 0; i < longerTimeoutBrowsers.length; i += 1) {\n  if (isBrowser && navigator.userAgent.indexOf(longerTimeoutBrowsers[i]) >= 0) {\n    timeoutDuration = 1;\n    break;\n  }\n}\n\nexport function microtaskDebounce(fn) {\n  let called = false\n  return () => {\n    if (called) {\n      return\n    }\n    called = true\n    window.Promise.resolve().then(() => {\n      called = false\n      fn()\n    })\n  }\n}\n\nexport function taskDebounce(fn) {\n  let scheduled = false;\n  return () => {\n    if (!scheduled) {\n      scheduled = true;\n      setTimeout(() => {\n        scheduled = false;\n        fn();\n      }, timeoutDuration);\n    }\n  };\n}\n\nconst supportsMicroTasks = isBrowser && window.Promise\n\n\n/**\n* Create a debounced version of a method, that's asynchronously deferred\n* but called in the minimum time possible.\n*\n* @method\n* @memberof Popper.Utils\n* @argument {Function} fn\n* @returns {Function}\n*/\nexport default (supportsMicroTasks\n  ? microtaskDebounce\n  : taskDebounce);\n","/**\n * Mimics the `find` method of Array\n * @method\n * @memberof Popper.Utils\n * @argument {Array} arr\n * @argument prop\n * @argument value\n * @returns index or -1\n */\nexport default function find(arr, check) {\n  // use native find if supported\n  if (Array.prototype.find) {\n    return arr.find(check);\n  }\n\n  // use `filter` to obtain the same behavior of `find`\n  return arr.filter(check)[0];\n}\n","import find from './find';\n\n/**\n * Return the index of the matching object\n * @method\n * @memberof Popper.Utils\n * @argument {Array} arr\n * @argument prop\n * @argument value\n * @returns index or -1\n */\nexport default function findIndex(arr, prop, value) {\n  // use native findIndex if supported\n  if (Array.prototype.findIndex) {\n    return arr.findIndex(cur => cur[prop] === value);\n  }\n\n  // use `find` + `indexOf` if `findIndex` isn't supported\n  const match = find(arr, obj => obj[prop] === value);\n  return arr.indexOf(match);\n}\n","import getWindowSizes from './getWindowSizes';\nimport getClientRect from './getClientRect';\n\n/**\n * Get the position of the given element, relative to its offset parent\n * @method\n * @memberof Popper.Utils\n * @param {Element} element\n * @return {Object} position - Coordinates of the element and its `scrollTop`\n */\nexport default function getOffsetRect(element) {\n  let elementRect;\n  if (element.nodeName === 'HTML') {\n    const { width, height } = getWindowSizes(element.ownerDocument);\n    elementRect = {\n      width,\n      height,\n      left: 0,\n      top: 0,\n    };\n  } else {\n    elementRect = {\n      width: element.offsetWidth,\n      height: element.offsetHeight,\n      left: element.offsetLeft,\n      top: element.offsetTop,\n    };\n  }\n\n  // position\n  return getClientRect(elementRect);\n}\n","/**\n * Get the outer sizes of the given element (offset size + margins)\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Object} object containing width and height properties\n */\nexport default function getOuterSizes(element) {\n  const window = element.ownerDocument.defaultView;\n  const styles = window.getComputedStyle(element);\n  const x = parseFloat(styles.marginTop || 0) + parseFloat(styles.marginBottom || 0);\n  const y = parseFloat(styles.marginLeft || 0) + parseFloat(styles.marginRight || 0);\n  const result = {\n    width: element.offsetWidth + y,\n    height: element.offsetHeight + x,\n  };\n  return result;\n}\n","/**\n * Get the opposite placement of the given one\n * @method\n * @memberof Popper.Utils\n * @argument {String} placement\n * @returns {String} flipped placement\n */\nexport default function getOppositePlacement(placement) {\n  const hash = { left: 'right', right: 'left', bottom: 'top', top: 'bottom' };\n  return placement.replace(/left|right|bottom|top/g, matched => hash[matched]);\n}\n","import getOuterSizes from './getOuterSizes';\nimport getOppositePlacement from './getOppositePlacement';\n\n/**\n * Get offsets to the popper\n * @method\n * @memberof Popper.Utils\n * @param {Object} position - CSS position the Popper will get applied\n * @param {HTMLElement} popper - the popper element\n * @param {Object} referenceOffsets - the reference offsets (the popper will be relative to this)\n * @param {String} placement - one of the valid placement options\n * @returns {Object} popperOffsets - An object containing the offsets which will be applied to the popper\n */\nexport default function getPopperOffsets(popper, referenceOffsets, placement) {\n  placement = placement.split('-')[0];\n\n  // Get popper node sizes\n  const popperRect = getOuterSizes(popper);\n\n  // Add position, width and height to our offsets object\n  const popperOffsets = {\n    width: popperRect.width,\n    height: popperRect.height,\n  };\n\n  // depending by the popper placement we have to compute its offsets slightly differently\n  const isHoriz = ['right', 'left'].indexOf(placement) !== -1;\n  const mainSide = isHoriz ? 'top' : 'left';\n  const secondarySide = isHoriz ? 'left' : 'top';\n  const measurement = isHoriz ? 'height' : 'width';\n  const secondaryMeasurement = !isHoriz ? 'height' : 'width';\n\n  popperOffsets[mainSide] =\n    referenceOffsets[mainSide] +\n    referenceOffsets[measurement] / 2 -\n    popperRect[measurement] / 2;\n  if (placement === secondarySide) {\n    popperOffsets[secondarySide] =\n      referenceOffsets[secondarySide] - popperRect[secondaryMeasurement];\n  } else {\n    popperOffsets[secondarySide] =\n      referenceOffsets[getOppositePlacement(secondarySide)];\n  }\n\n  return popperOffsets;\n}\n","import findCommonOffsetParent from './findCommonOffsetParent';\nimport getOffsetRectRelativeToArbitraryNode from './getOffsetRectRelativeToArbitraryNode';\nimport getFixedPositionOffsetParent from './getFixedPositionOffsetParent';\n\n/**\n * Get offsets to the reference element\n * @method\n * @memberof Popper.Utils\n * @param {Object} state\n * @param {Element} popper - the popper element\n * @param {Element} reference - the reference element (the popper will be relative to this)\n * @param {Element} fixedPosition - is in fixed position mode\n * @returns {Object} An object containing the offsets which will be applied to the popper\n */\nexport default function getReferenceOffsets(state, popper, reference, fixedPosition = null) {\n  const commonOffsetParent = fixedPosition ? getFixedPositionOffsetParent(popper) : findCommonOffsetParent(popper, reference);\n  return getOffsetRectRelativeToArbitraryNode(reference, commonOffsetParent, fixedPosition);\n}\n","/**\n * Get the prefixed supported property name\n * @method\n * @memberof Popper.Utils\n * @argument {String} property (camelCase)\n * @returns {String} prefixed property (camelCase or PascalCase, depending on the vendor prefix)\n */\nexport default function getSupportedPropertyName(property) {\n  const prefixes = [false, 'ms', 'Webkit', 'Moz', 'O'];\n  const upperProp = property.charAt(0).toUpperCase() + property.slice(1);\n\n  for (let i = 0; i < prefixes.length; i++) {\n    const prefix = prefixes[i];\n    const toCheck = prefix ? `${prefix}${upperProp}` : property;\n    if (typeof document.body.style[toCheck] !== 'undefined') {\n      return toCheck;\n    }\n  }\n  return null;\n}\n","/**\n * Check if the given variable is a function\n * @method\n * @memberof Popper.Utils\n * @argument {Any} functionToCheck - variable to check\n * @returns {Boolean} answer to: is a function?\n */\nexport default function isFunction(functionToCheck) {\n  const getType = {};\n  return (\n    functionToCheck &&\n    getType.toString.call(functionToCheck) === '[object Function]'\n  );\n}\n","/**\n * Helper used to know if the given modifier is enabled.\n * @method\n * @memberof Popper.Utils\n * @returns {Boolean}\n */\nexport default function isModifierEnabled(modifiers, modifierName) {\n  return modifiers.some(\n    ({ name, enabled }) => enabled && name === modifierName\n  );\n}\n","import find from './find';\n\n/**\n * Helper used to know if the given modifier depends from another one.<br />\n * It checks if the needed modifier is listed and enabled.\n * @method\n * @memberof Popper.Utils\n * @param {Array} modifiers - list of modifiers\n * @param {String} requestingName - name of requesting modifier\n * @param {String} requestedName - name of requested modifier\n * @returns {Boolean}\n */\nexport default function isModifierRequired(\n  modifiers,\n  requestingName,\n  requestedName\n) {\n  const requesting = find(modifiers, ({ name }) => name === requestingName);\n\n  const isRequired =\n    !!requesting &&\n    modifiers.some(modifier => {\n      return (\n        modifier.name === requestedName &&\n        modifier.enabled &&\n        modifier.order < requesting.order\n      );\n    });\n\n  if (!isRequired) {\n    const requesting = `\\`${requestingName}\\``;\n    const requested = `\\`${requestedName}\\``;\n    console.warn(\n      `${requested} modifier is required by ${requesting} modifier in order to work, be sure to include it before ${requesting}!`\n    );\n  }\n  return isRequired;\n}\n","/**\n * Tells if a given input is a number\n * @method\n * @memberof Popper.Utils\n * @param {*} input to check\n * @return {Boolean}\n */\nexport default function isNumeric(n) {\n  return n !== '' && !isNaN(parseFloat(n)) && isFinite(n);\n}\n","/**\n * Get the window associated with the element\n * @argument {Element} element\n * @returns {Window}\n */\nexport default function getWindow(element) {\n  const ownerDocument = element.ownerDocument;\n  return ownerDocument ? ownerDocument.defaultView : window;\n}\n","import getWindow from './getWindow';\n\n/**\n * Remove event listeners used to update the popper position\n * @method\n * @memberof Popper.Utils\n * @private\n */\nexport default function removeEventListeners(reference, state) {\n  // Remove resize event listener on window\n  getWindow(reference).removeEventListener('resize', state.updateBound);\n\n  // Remove scroll event listener on scroll parents\n  state.scrollParents.forEach(target => {\n    target.removeEventListener('scroll', state.updateBound);\n  });\n\n  // Reset state\n  state.updateBound = null;\n  state.scrollParents = [];\n  state.scrollElement = null;\n  state.eventsEnabled = false;\n  return state;\n}\n","import isFunction from './isFunction';\nimport findIndex from './findIndex';\nimport getClientRect from '../utils/getClientRect';\n\n/**\n * Loop trough the list of modifiers and run them in order,\n * each of them will then edit the data object.\n * @method\n * @memberof Popper.Utils\n * @param {dataObject} data\n * @param {Array} modifiers\n * @param {String} ends - Optional modifier name used as stopper\n * @returns {dataObject}\n */\nexport default function runModifiers(modifiers, data, ends) {\n  const modifiersToRun = ends === undefined\n    ? modifiers\n    : modifiers.slice(0, findIndex(modifiers, 'name', ends));\n\n  modifiersToRun.forEach(modifier => {\n    if (modifier['function']) { // eslint-disable-line dot-notation\n      console.warn('`modifier.function` is deprecated, use `modifier.fn`!');\n    }\n    const fn = modifier['function'] || modifier.fn; // eslint-disable-line dot-notation\n    if (modifier.enabled && isFunction(fn)) {\n      // Add properties to offsets to make them a complete clientRect object\n      // we do this before each modifier to make sure the previous one doesn't\n      // mess with these values\n      data.offsets.popper = getClientRect(data.offsets.popper);\n      data.offsets.reference = getClientRect(data.offsets.reference);\n\n      data = fn(data, modifier);\n    }\n  });\n\n  return data;\n}\n","/**\n * Set the attributes to the given popper\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element - Element to apply the attributes to\n * @argument {Object} styles\n * Object with a list of properties and values which will be applied to the element\n */\nexport default function setAttributes(element, attributes) {\n  Object.keys(attributes).forEach(function(prop) {\n    const value = attributes[prop];\n    if (value !== false) {\n      element.setAttribute(prop, attributes[prop]);\n    } else {\n      element.removeAttribute(prop);\n    }\n  });\n}\n","import isNumeric from './isNumeric';\n\n/**\n * Set the style to the given popper\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element - Element to apply the style to\n * @argument {Object} styles\n * Object with a list of properties and values which will be applied to the element\n */\nexport default function setStyles(element, styles) {\n  Object.keys(styles).forEach(prop => {\n    let unit = '';\n    // add unit if the value is numeric and is one of the following\n    if (\n      ['width', 'height', 'top', 'right', 'bottom', 'left'].indexOf(prop) !==\n        -1 &&\n      isNumeric(styles[prop])\n    ) {\n      unit = 'px';\n    }\n    element.style[prop] = styles[prop] + unit;\n  });\n}\n","import getScrollParent from './getScrollParent';\nimport getWindow from './getWindow';\n\nfunction attachToScrollParents(scrollParent, event, callback, scrollParents) {\n  const isBody = scrollParent.nodeName === 'BODY';\n  const target = isBody ? scrollParent.ownerDocument.defaultView : scrollParent;\n  target.addEventListener(event, callback, { passive: true });\n\n  if (!isBody) {\n    attachToScrollParents(\n      getScrollParent(target.parentNode),\n      event,\n      callback,\n      scrollParents\n    );\n  }\n  scrollParents.push(target);\n}\n\n/**\n * Setup needed event listeners used to update the popper position\n * @method\n * @memberof Popper.Utils\n * @private\n */\nexport default function setupEventListeners(\n  reference,\n  options,\n  state,\n  updateBound\n) {\n  // Resize event listener on window\n  state.updateBound = updateBound;\n  getWindow(reference).addEventListener('resize', state.updateBound, { passive: true });\n\n  // Scroll event listener on scroll parents\n  const scrollElement = getScrollParent(reference);\n  attachToScrollParents(\n    scrollElement,\n    'scroll',\n    state.updateBound,\n    state.scrollParents\n  );\n  state.scrollElement = scrollElement;\n  state.eventsEnabled = true;\n\n  return state;\n}\n","import computeAutoPlacement from './computeAutoPlacement';\nimport debounce from './debounce';\nimport findIndex from './findIndex';\nimport getBordersSize from './getBordersSize';\nimport getBoundaries from './getBoundaries';\nimport getBoundingClientRect from './getBoundingClientRect';\nimport getClientRect from './getClientRect';\nimport getOffsetParent from './getOffsetParent';\nimport getOffsetRect from './getOffsetRect';\nimport getOffsetRectRelativeToArbitraryNode from './getOffsetRectRelativeToArbitraryNode';\nimport getOuterSizes from './getOuterSizes';\nimport getParentNode from './getParentNode';\nimport getPopperOffsets from './getPopperOffsets';\nimport getReferenceOffsets from './getReferenceOffsets';\nimport getScroll from './getScroll';\nimport getScrollParent from './getScrollParent';\nimport getStyleComputedProperty from './getStyleComputedProperty';\nimport getSupportedPropertyName from './getSupportedPropertyName';\nimport getWindowSizes from './getWindowSizes';\nimport isFixed from './isFixed';\nimport isFunction from './isFunction';\nimport isModifierEnabled from './isModifierEnabled';\nimport isModifierRequired from './isModifierRequired';\nimport isNumeric from './isNumeric';\nimport removeEventListeners from './removeEventListeners';\nimport runModifiers from './runModifiers';\nimport setAttributes from './setAttributes';\nimport setStyles from './setStyles';\nimport setupEventListeners from './setupEventListeners';\n\n/** @namespace Popper.Utils */\nexport {\n  computeAutoPlacement,\n  debounce,\n  findIndex,\n  getBordersSize,\n  getBoundaries,\n  getBoundingClientRect,\n  getClientRect,\n  getOffsetParent,\n  getOffsetRect,\n  getOffsetRectRelativeToArbitraryNode,\n  getOuterSizes,\n  getParentNode,\n  getPopperOffsets,\n  getReferenceOffsets,\n  getScroll,\n  getScrollParent,\n  getStyleComputedProperty,\n  getSupportedPropertyName,\n  getWindowSizes,\n  isFixed,\n  isFunction,\n  isModifierEnabled,\n  isModifierRequired,\n  isNumeric,\n  removeEventListeners,\n  runModifiers,\n  setAttributes,\n  setStyles,\n  setupEventListeners,\n};\n\n// This is here just for backward compatibility with versions lower than v1.10.3\n// you should import the utilities using named exports, if you want them all use:\n// ```\n// import * as PopperUtils from 'popper-utils';\n// ```\n// The default export will be removed in the next major version.\nexport default {\n  computeAutoPlacement,\n  debounce,\n  findIndex,\n  getBordersSize,\n  getBoundaries,\n  getBoundingClientRect,\n  getClientRect,\n  getOffsetParent,\n  getOffsetRect,\n  getOffsetRectRelativeToArbitraryNode,\n  getOuterSizes,\n  getParentNode,\n  getPopperOffsets,\n  getReferenceOffsets,\n  getScroll,\n  getScrollParent,\n  getStyleComputedProperty,\n  getSupportedPropertyName,\n  getWindowSizes,\n  isFixed,\n  isFunction,\n  isModifierEnabled,\n  isModifierRequired,\n  isNumeric,\n  removeEventListeners,\n  runModifiers,\n  setAttributes,\n  setStyles,\n  setupEventListeners,\n};\n"]}